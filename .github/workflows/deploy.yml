name: build & deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "*/12 * * * *"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      N2YO_API_KEY: ${{ secrets.N2YO_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install system deps for C (curl)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libcurl4-openssl-dev

      - name: Build C fetcher
        run: |
          make -C c clean || true
          make -C c

      - name: Determine Pages URL
        id: pagesurl
        run: |
          OWNER=${GITHUB_REPOSITORY%%/*}
          REPO=${GITHUB_REPOSITORY#*/}
          echo "owner=$OWNER" >> $GITHUB_OUTPUT
          echo "repo=$REPO" >> $GITHUB_OUTPUT
          echo "url=https://$OWNER.github.io/$REPO/data.json" >> $GITHUB_OUTPUT
          echo "Pages data.json URL: https://$OWNER.github.io/$REPO/data.json"

      - name: Restore previous data.json (if exists)
        run: |
          mkdir -p c
          # Try to fetch last deployed file; if 404/empty, continue
          curl -fsSL "${{ steps.pagesurl.outputs.url }}" -o c/data.json || echo "No previous data.json on Pages (first run or path mismatch)."
          echo "Restored c/data.json (if any):"
          ls -l --time-style=long-iso c/data.json || true
          head -c 200 c/data.json || true; echo

      - name: Run fetcher to update data.json (inside c/)
        run: |
          set -euo pipefail
          pushd c > /dev/null
          ./satellite sats.txt
          echo "c/data.json after run:"
          ls -l --time-style=long-iso data.json
          (sha256sum data.json || shasum -a 256 data.json) || true
          head -c 200 data.json; echo
          popd > /dev/null

      - name: Copy to public/ and show final file
        run: |
          set -e
          mkdir -p public
          cp c/data.json public/data.json
          echo "public/data.json to be deployed:"
          ls -l --time-style=long-iso public/data.json
          (sha256sum public/data.json || shasum -a 256 public/data.json) || true
          head -c 200 public/data.json; echo

      - name: Write build info (timestamp)
        run: |
          ts=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "{\"builtAt\":\"$ts\",\"runId\":\"${GITHUB_RUN_ID}\"}" > public/buildinfo.json



      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install deps & build site
        run: |
          npm ci
          npm run build

      - name: Configure Pages
        uses: actions/configure-pages@v5
        with:
          enablement: true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
