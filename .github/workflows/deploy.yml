name: Build, fetch satellites, and deploy to Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "*/30 * * * *"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      N2YO_API_KEY: ${{ secrets.N2YO_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

        # (optional) show the workspace so you can see where files really are
      - name: Show workspace layout
        run: |
          echo "PWD: $(pwd)"
          find . -maxdepth 3 -type d -print | sed 's/^/DIR /'

      - name: Detect paths
        id: detect
        shell: bash
        run: |
          if [ -d SatelliteTracker/c ]; then C_DIR="SatelliteTracker/c"; \
          elif [ -d c ]; then C_DIR="c"; else echo "No C dir found"; exit 1; fi
          if [ -f SatelliteTracker/package.json ]; then WEB_DIR="SatelliteTracker"; \
          elif [ -f package.json ]; then WEB_DIR="."; else echo "No package.json found"; exit 1; fi
          echo "C_DIR=$C_DIR"   >> $GITHUB_OUTPUT
          echo "WEB_DIR=$WEB_DIR" >> $GITHUB_OUTPUT
          echo "Using C_DIR=$C_DIR, WEB_DIR=$WEB_DIR"

      - name: Install system deps for C (curl)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libcurl4-openssl-dev

      - name: Build C fetcher
        run: |
          make -C "${{ steps.detect.outputs.C_DIR }}" clean || true
          make -C "${{ steps.detect.outputs.C_DIR }}"

      - name: Run fetcher to update data.json
        run: |
          "${{ steps.detect.outputs.C_DIR }}/satellite" "${{ steps.detect.outputs.C_DIR }}/sats.txt"
          mkdir -p "${{ steps.detect.outputs.WEB_DIR }}/public"
          cp "${{ steps.detect.outputs.C_DIR }}/data.json" "${{ steps.detect.outputs.WEB_DIR }}/public/data.json"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "${{ steps.detect.outputs.WEB_DIR }}/package.json"

      - name: Install deps & build site
        run: |
          cd "${{ steps.detect.outputs.WEB_DIR }}"
          npm ci
          npm run build

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "${{ steps.detect.outputs.WEB_DIR }}/dist"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
